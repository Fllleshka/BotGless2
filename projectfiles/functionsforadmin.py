from projectfiles.dates import *
from telebot import *


import requests
import datetime
import gspread
import subprocess

global oldmessage


# –§—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è call-—Ü–µ–Ω—Ç—Ä–∞
def changecallcener(message, bot):
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è
    def GETrequest(manager, headers):
        request = urlapi + str(manager) + '/agent'
        result = requests.get(request, headers=headers)
        return result
    today = datetime.datetime.today()
    todaytime = today.strftime("%H:%M:%S")
    firstname = message.chat.first_name
    lastname = message.chat.last_name
    print(todaytime, "[", firstname, lastname, "] –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É [‚òé–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å call-—Ü–µ–Ω—Ç—Ä‚òé]")
    status = []
    markup = telebot.types.InlineKeyboardMarkup()
    for i in range(0, len(newusers.names_managers)):
        statusget = GETrequest(newusers.shortnumbers_managers[i], headers)
        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–∂–¥–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –≤ —Å–ø–∏—Å–æ–∫
        status.append(str(statusget.text)[1:-1])
        # –°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫—É –∏–º–µ–Ω–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        buttonname = types.InlineKeyboardButton(newusers.names_managers[i], callback_data = "wrongCallBack")
        # –°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫—É —Å—Ç–∞—Ç—É—Å–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        textfornutton = "üü¢ ONLINE üü¢" if (status[i] == "ONLINE") else "üî¥ OFFLINE üî¥"
        buttonstatus = types.InlineKeyboardButton(text = textfornutton, callback_data = newusers.names_managers[i])
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é
        markup.add(buttonname, buttonstatus)
    oldmessage = bot.send_message(message.chat.id, "–ú–µ–Ω–µ–¥–∂–µ—Ä—ã –æ–Ω–ª–∞–π–Ω", reply_markup = markup)
    # –§—É–Ω–∫—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–æ–ª–ª—Ü–µ–Ω—Ç—Ä–µ
    def callback_change_call_center(usershortnumber, username, bot, call, firstname, lastname, oldmessage, message):
        statusget = str(GETrequest(usershortnumber, headers).text)[1:-1]
        print("–°—Ç–∞—Ç—É—Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞", username, '(', statusget, ") –∏–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º")
        test_for_callback = changestatus(statusget, usershortnumber)
        bot.answer_callback_query(call.id, test_for_callback)
        statusget = str(GETrequest(usershortnumber, headers).text)[1:-1]
        logger(firstname, lastname, username, statusget)
        try:
            bot.edit_message_text("–ë–æ–ª–µ–µ –Ω–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ", oldmessage.chat.id, oldmessage.message_id)
        except:
            bot.send_message(message.chat.id, "–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫( –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –µ—â—ë —Ä–∞–∑")
        finally:
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –µ—â—ë —Ä–∞–∑")
    # –§—É–Ω—Ü–∏—è –æ—Ç–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞–Ω–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
    @bot.callback_query_handler(func=lambda call: True)
    def callback_query(call):
        match(call.data):
            case newusers.konovalov.name:
                callback_change_call_center(newusers.konovalov.shortnumber, newusers.konovalov.name, bot, call,
                                            firstname, lastname, oldmessage, message)
            case newusers.zagravskiy.name:
                callback_change_call_center(newusers.zagravskiy.shortnumber, newusers.zagravskiy.name, bot, call,
                                            firstname, lastname, oldmessage, message)
            case newusers.beregovoy.name:
                callback_change_call_center(newusers.beregovoy.shortnumber, newusers.beregovoy.name, bot, call,
                                            firstname, lastname, oldmessage, message)
            case newusers.peshkov.name:
                callback_change_call_center(newusers.peshkov.shortnumber, newusers.peshkov.name, bot, call,
                                            firstname, lastname, oldmessage, message)
            case newusers.sekachev.name:
                callback_change_call_center(newusers.sekachev.shortnumber, newusers.sekachev.name, bot, call,
                                            firstname, lastname, oldmessage, message)
            case newusers.reserved.name:
                callback_change_call_center(newusers.reserved.shortnumber, newusers.reserved.name, bot, call,
                                            firstname, lastname, oldmessage, message)
            case _:
                print("–ù–∞ –∫–Ω–æ–ø–æ—á–∫—É —Å–ø—Ä–∞–≤–∞!")
                bot.answer_callback_query(call.id, "–ù–∞ –∫–Ω–æ–ø–æ—á–∫—É —Å–ø—Ä–∞–≤–∞!")

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π
def logger(firstname, lastname, name, status):
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ä–≤–∏—Å–Ω–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É
    gc = gspread.service_account(CREDENTIALS_FILE)
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Ç–∞–±–ª–∏—Ü–µ –ø–æ –∫–ª—é—á—É —Ç–∞–±–ª–∏—Ü—ã
    table = gc.open_by_key(sheetkey)
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–π –ª–∏—Å—Ç
    worksheet = table.worksheet("LogsCallCenterBot")
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –ª–∏—Å—Ç–∞
    dates = worksheet.get_values()
    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Å–∞–º–æ–π –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–æ–∫–∏
    newstr = len(worksheet.col_values(1)) + 1
    # –í—ã—á–∏—Å–ª—è–µ–º –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏
    newnumber = newstr - 1
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏
    today = datetime.datetime.today().strftime("%d.%m.%Y | %H:%M:%S")
    # –§–æ—Ä–º–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ–ª–æ–≤–µ–∫–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É
    resultname = firstname + " " + lastname
    # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–∏–ª–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    worksheet.update_cell(newstr, 1, newnumber)
    worksheet.update_cell(newstr, 2, today)
    worksheet.update_cell(newstr, 3, resultname)
    worksheet.update_cell(newstr, 4, name)
    worksheet.update_cell(newstr, 5, status)

# –§—É–Ω–∫—Ü–∏—è –∏–Ω–≤–µ—Ä—Å–∏–∏ —Å—Ç–∞—Ç—É—Å–∞
def changestatus(statusnow, numbermanager):
    if (statusnow == "OFFLINE"):
        text_for_callback = "–°—Ç–∞—Ç—É—Å " + str(numbermanager) + " –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ ONLINE"
        urlforapi = urlapi + str(numbermanager) + '/agent'
        requests.put(urlforapi, params = paramsonline, headers = headers)
    else:
        text_for_callback = "–°—Ç–∞—Ç—É—Å " + str(numbermanager) + " –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ OFFLINE"
        urlforapi = urlapi + str(numbermanager) + '/agent'
        requests.put(urlforapi, params = paramoffline, headers = headers)
    return text_for_callback

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –≤—Å–µ—Ö –≤ Call —Ü–µ–Ω—Ç—Ä–µ
def offcallcenter(message, bot):
    today = datetime.datetime.today()
    todaytime = today.strftime("%H:%M:%S")
    print(todaytime, "[", message.chat.first_name, message.chat.last_name, "] –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É [–í—ã–∫–ª—é—á–∏—Ç—å Call-—Ü–µ–Ω—Ç—Ä]")
    for element in newusers.shortnumbers_managers:
        urlforapi = urlapi + str(element) + '/agent'
        requests.put(urlforapi, params = paramoffline, headers=headers)
    text = "–í—Å–µ —Ç–µ–ª–µ—Ñ–æ–Ω—ã –≤—ã–∫–ª—é—á–µ–Ω—ã"
    bot.send_message(message.chat.id, text)
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ä–≤–∏—Å–Ω–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É
    gc = gspread.service_account(CREDENTIALS_FILE)
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Ç–∞–±–ª–∏—Ü–µ –ø–æ –∫–ª—é—á—É —Ç–∞–±–ª–∏—Ü—ã
    table = gc.open_by_key(sheetkey)
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–π –ª–∏—Å—Ç
    worksheet = table.worksheet("LogsCallCenterBot")
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –ª–∏—Å—Ç–∞
    dates = worksheet.get_values()
    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Å–∞–º–æ–π –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–æ–∫–∏
    newstr = len(worksheet.col_values(1)) + 1
    # –í—ã—á–∏—Å–ª—è–µ–º –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏
    newnumber = newstr - 1
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏
    today = datetime.datetime.today().strftime("%d.%m.%Y | %H:%M:%S")
    # –§–æ—Ä–º–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ–ª–æ–≤–µ–∫–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É
    resultname = message.chat.first_name + " " + message.chat.last_name
    # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–∏–ª–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    worksheet.update_cell(newstr, 1, newnumber)
    worksheet.update_cell(newstr, 2, today)
    worksheet.update_cell(newstr, 3, resultname)
    worksheet.update_cell(newstr, 4, "ALL")
    worksheet.update_cell(newstr, 5, "OFFLINE")

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ uploadfilesonserverglessgroup
def reloadscriptuploadfilesonserverglessgroup(message, bot):
    try:
        subprocess.Popen('–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤ GlessGroup –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Call-—Ü–µ–Ω—Ç—Ä–∞.bat')
        text = "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã –∑–∞–≤–µ—Ä—à—ë–Ω"
        bot.send_message(message.chat.id, text=text)
    except Exception as e:
        text = "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –Ω–µ —É–¥–∞–ª—Å—è(\n–ö–æ–¥ –æ—à–∏–±–∫–∏[" + str(e) + "]"
        print(text)
        bot.send_message(message.chat.id, text=text)