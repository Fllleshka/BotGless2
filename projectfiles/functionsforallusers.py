import os
import sqlite3
from time import sleep

from telebot import *
from urllib3 import request

from projectfiles.dates import *
import datetime
import requests

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞—à–µ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã
def timeworking(message, bot):
    time = ['09:00 - 19:00', '09:00 - 19:00', '09:00 - 16:00', '09:00 - 19:00', '09:00 - 19:00', '10:00 - 17:00',
            '10:00 - 15:00']
    days = ['–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥', '–ü—è—Ç–Ω–∏—Ü–∞', '–°—É–±–±–æ—Ç–∞', '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ']
    markup = telebot.types.InlineKeyboardMarkup()
    index = 0
    for i in time:
        btn1 = telebot.types.InlineKeyboardButton(days[index], callback_data = 1)
        btn2 = telebot.types.InlineKeyboardButton(time[index], callback_data = 2)
        index += 1
        markup.row(btn1, btn2)
    bot.send_message(message.chat.id, "–ù–∞—à —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã", reply_markup=markup)

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞—à–∏—Ö —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π
def socialntworks(message, bot):
    namessocialnetworks = ['üì∏   Instagram   üì∏',
                           'üé•   YouTube   üé•',
                           'üì±   Vkontakte   üì±',
                           'üìΩ   RuTube   üìΩ',
                           'üì°   WebSite   üì°']
    socialnetworks = ['https://www.instagram.com/glessgroup/',
                      'https://www.youtube.com/c/GLeSSGroup',
                      'https://vk.com/gless_group_omsk',
                      'https://rutube.ru/channel/25007187/',
                      'https://gless.group/']
    index = 0
    markup = telebot.types.InlineKeyboardMarkup()
    for i in socialnetworks:
        button = telebot.types.InlineKeyboardButton(namessocialnetworks[index], url=socialnetworks[index])
        markup.add(button)
        index += 1
    bot.send_message(message.chat.id, "–ù–∞—à–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏", reply_markup=markup)

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—à–∏–±–∫–∏ –≤–≤–æ–¥–∞ —Å–æ–æ–±–µ—â–Ω–∏—è
def senderrormessage(message, bot):
    text = "–Ø —á—Ç–æ-—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω–∏–º–∞—é( –ö–ª–∏–∫–Ω–∏—Ç–µ –ø–æ –∫–Ω–æ–ø–∫–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞."
    bot.send_message(message.chat.id, text)

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Å—ã–ª–æ–∫ –Ω–∞ –Ω–∞—à–∏ –æ—Ç–∑—ã–≤—ã
def reviews(message, bot):
    reviewsnetworks = ['üì∏   Flump   üì∏',
                       'üìç   2GIS   üìç',
                       'üì®   YandexMaps   üì®',
                       'üåé   GoogleMaps   üåé']
    socialnetworks = ['http://omsk.flamp.ru/firm/gless_avtotekhcentr-282003257988334',
                      'https://go.2gis.com/xotto',
                      'https://yandex.ru/maps/-/CCUZ4Lc8kB',
                      'https://goo.gl/maps/4CGmYUNVMuh8Md7P8']
    index = 0
    markup = telebot.types.InlineKeyboardMarkup()
    for i in socialnetworks:
        button = telebot.types.InlineKeyboardButton(reviewsnetworks[index], url=socialnetworks[index])
        markup.add(button)
        index += 1
    #bot.send_message(message.chat.id, "–û—Å—Ç–∞–≤—å—Ç–µ –æ –Ω–∞—Å –º–Ω–µ–Ω–∏–µ!", reply_markup=markup)
    text_caption = "üöó –î–æ–±—Ä—ã–π –¥–µ–Ω—å, –≤—ã –æ–±—Å–ª—É–∂–∏–≤–∞–ª–∏—Å—å —É –Ω–∞—Å –≤  Mazda Glessüöó\nüè† –õ–∏–∑—ã –ß–∞–π–∫–∏–Ω–æ–π, 7 –∫3üè†\nü§†–û—Å—Ç–∞–≤—å—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ç–∑—ã–≤ –æ –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç–µ!ü§†"
    bot.send_photo(message.chat.id, photo=open("images/–ö–∞—Ä—Ç–∏–Ω–∫–∞ –¥–ª—è –ø–æ—Å—Ç–∞ —Å –æ—Ç–∑—ã–≤–∞–º–∏.png", 'rb'), caption=text_caption, reply_markup=markup)

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Å—ã–ª–∫–∏ —Å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–º –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª –∏ –æ—Ç–∑—ã–≤–∞–º–∏
def channellinkandreviews(message, bot):
    reviewsnetworks = ['üíé   Telegram   üíé',
                       'üì∏   Flump   üì∏',
                       'üìç   2GIS   üìç',
                       'üì®   YandexMaps   üì®',
                       'üåé   GoogleMaps   üåé']
    socialnetworks = ['https://t.me/glessgroup',
                      'http://omsk.flamp.ru/firm/gless_avtotekhcentr-282003257988334',
                      'https://go.2gis.com/xotto',
                      'https://yandex.ru/maps/-/CCUZ4Lc8kB',
                      'https://goo.gl/maps/4CGmYUNVMuh8Md7P8']
    index = 0
    markup = telebot.types.InlineKeyboardMarkup()
    for i in socialnetworks:
        button = telebot.types.InlineKeyboardButton(reviewsnetworks[index], url=socialnetworks[index])
        markup.add(button)
        index += 1
    text_caption = "üöó –î–æ–±—Ä—ã–π –¥–µ–Ω—å, –≤—ã –æ–±—Å–ª—É–∂–∏–≤–∞–ª–∏—Å—å —É –Ω–∞—Å –≤  Mazda Gless. üöó\n" \
                   "üè† –õ–∏–∑—ã –ß–∞–π–∫–∏–Ω–æ–π, 7 –∫3. üè†\n" \
                   "ü§† –û—Å—Ç–∞–≤—å—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ç–∑—ã–≤ –æ –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç–µ! ü§†\n" \
                   "üìü –•–æ—Ç–∏–º –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤–∞—Å –≤ –Ω–∞—à Telegram –∫–∞–Ω–∞–ª. üìü\n" \
                   "üé• –ü–æ–ª–µ–∑–Ω—ã–µ –≤–∏–¥–µ–æ –æ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ —Ä–µ–º–æ–Ω—Ç–∞. üé•\n" \
                   "–í–æ–ø—Ä–æ—Å—ã, –æ—Ç–≤–µ—Ç—ã, –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.\n" \
                   "üìû +7(965)9836080 üìû\n" \
                   "ü§† –ü–æ—á–∏–Ω–∏–º Mazd—É –≤ –º–æ–º–µ–Ω—Ç! ü§†\n" \
                   "üòÅ –ö—Å—Ç–∞—Ç–∏ –∏ –∑–∞–ø—á–∞—Å—Ç–∏ —Ç–æ–∂–µ –µ—Å—Ç—å! üòÅ\n" \
                   "–û—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤ –æ –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç–µ! "

    bot.send_photo(message.chat.id, photo=open("images/–ö–∞—Ä—Ç–∏–Ω–∫–∞ –¥–ª—è –ø–æ—Å—Ç–∞ —Å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ–º –≤ telegram.jpg", 'rb'), caption=text_caption, reply_markup=markup)

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ id —á–µ–ª–æ–≤–µ–∫–∞
def youid(message, bot):
    text = "–ß–µ–ª–æ–≤–µ–∫ : " + str(message.chat.id) + "\n" + str(message.chat.first_name) + " " + str(
        message.chat.last_name) + "\n" + str(message.chat.username)
    text2 = "–ù–∞–ø–∏—Å–∞–ª —Å–ª–µ–¥—É—é—â–µ–µ: " + message.text
    bot.send_message(userid.id_6080, text)
    bot.send_message(userid.id_6080, text2)
    text3 = "–í–∞—à ID: \n" + str(message.chat.id)
    bot.send_message(message.chat.id, text3)

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü
def createtables(con):
    # –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—ã
    with con:
        con.execute(
            """
                CREATE TABLE FullName (
                    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
                    first_name TEXT,
                    last_name TEXT
                );
            """
        ),
        con.execute(
            """
                CREATE TABLE PathFolder (
                    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
                    path TEXT,
                    id_full_name INTEGER,
                    FOREIGN KEY (id_full_name) REFERENCES FullName(id)
                );
            """
        ),
        con.execute(
            """
                CREATE TABLE TelegramId (
                    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
                    idTelegram INTEGER,
                    id_full_name INTEGER,
                    FOREIGN KEY (id_full_name) REFERENCES FullName(id)
                );
            """
        ),
        con.execute(
            """
                CREATE TABLE ShortNumber (
                    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
                    Number INTEGER,
                    id_full_name INTEGER,
                    FOREIGN KEY (id_full_name) REFERENCES FullName(id)
                );
            """
        ),
        con.execute(
            """
                CREATE TABLE TransportCompany (
                    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
                    Name TEXT,
                    id_responsible INTEGER,
                    FOREIGN KEY (id_responsible) REFERENCES FullName(id)
                );
            """
        ),

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü
def insertdatesintables(con, nametable, data):
    match (nametable):
        case "FullName":
            for element in data:
                mass = element.split()
                request = """ INSERT INTO FullName (first_name, last_name) VALUES (?, ?);"""
                paramsrequest = (mass[0], mass[1])
                # –í—Å—Ç–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—ã
                with con:
                    con.execute(request, paramsrequest)
            print("\t–¢–∞–±–ª–∏—Ü–∞ FullName –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        case "PathFolder":
            index = 0
            for element in data:
                index += 1
                request = """ INSERT INTO PathFolder (path, id_full_name) VALUES (?, ?);"""
                paramsrequest = (element, index)
                # –í—Å—Ç–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—ã
                with con:
                    con.execute(request, paramsrequest)
            print("\t–¢–∞–±–ª–∏—Ü–∞ PathFolder –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        case "TelegramId":
            index = 0
            for element in data:
                index += 1
                request = """ INSERT INTO TelegramId (idTelegram, id_full_name) VALUES (?, ?);"""
                paramsrequest = (element, index)
                # –í—Å—Ç–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—ã
                with con:
                    con.execute(request, paramsrequest)
            print("\t–¢–∞–±–ª–∏—Ü–∞ TelegramId –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        case "ShortNumber":
            index = 0
            for element in data:
                index += 1
                request = """ INSERT INTO ShortNumber (Number, id_full_name) VALUES (?, ?);"""
                paramsrequest = (element, index)
                # –í—Å—Ç–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—ã
                with con:
                    con.execute(request, paramsrequest)
            print("\t–¢–∞–±–ª–∏—Ü–∞ ShortNumber –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")

        case "TransportCompany":
            index = 0
            masstk = [transport_companies.dellin, transport_companies.nrg_tk, transport_companies.pecom, transport_companies.cdek]
            for element in data:
                request = """ INSERT INTO TransportCompany (Name, id_responsible) VALUES (?, ?);"""
                paramsrequest = (element, 'None')
                # –í—Å—Ç–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—ã
                with con:
                    con.execute(request, paramsrequest)
            print("\t–¢–∞–±–ª–∏—Ü–∞ TransportCompany –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        case _:
            print("–ù–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è —Ç–∞–±–ª–∏—Ü—ã")

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ
def checkdatesfromdatabase(con, request):
    #print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–æ–¥–∏–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π")
    with con:
        cursor = con.cursor()
        cursor.execute(request)
        result = cursor.fetchall()
        #for element in result:
        #    print(element)
    return result

# –§—É–Ω–∫—Ü–∏—è –≤—Å—Ç–∞–≤–∫–∏ –ø–µ—Ä–≤–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É
def insertfirstdatesintables(con):
    # –§—É–Ω–∫—Ü–∏—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã FullName
    insertdatesintables(con, 'FullName', Workers)
    # –§—É–Ω–∫—Ü–∏—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã PathFolder
    insertdatesintables(con, 'PathFolder', [class_pathmanagers.admin, class_pathmanagers.fleysner,
                                            class_pathmanagers.beregovoy, class_pathmanagers.konovalov,
                                            class_pathmanagers.zagravskiy, class_pathmanagers.pushkar,
                                            class_pathmanagers.peshkov])
    # –§—É–Ω–∫—Ü–∏—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã TelegramId
    insertdatesintables(con, 'TelegramId', [userid.id_6080, userid.id_fleysner, userid.id_beregovoy,
                                            userid.id_konovalov, userid.id_zagravskiy,
                                            userid.id_pushkar, userid.id_pushkar])
    # –§—É–Ω–∫—Ü–∏—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã ShortNumber
    insertdatesintables(con, 'ShortNumber', [class_shortnumbersworkers.admin, class_shortnumbersworkers.fleysner,
                                             class_shortnumbersworkers.beregovoy, class_shortnumbersworkers.konovalov,
                                             class_shortnumbersworkers.zagravskiy, class_shortnumbersworkers.pushkar,
                                             class_shortnumbersworkers.peshkov])
    # –§—É–Ω–∫—Ü–∏—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã TransportCompany
    insertdatesintables(con, 'TransportCompany', [transport_companies.dellin, transport_companies.nrg_tk,
                                             transport_companies.pecom, transport_companies.cdek])

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ
def serviserecord(message, bot):
    # –í—ã—è—Å–Ω–µ–Ω–∏–µ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è
    today = datetime.datetime.today()
    todaytime = today.strftime("%H:%M:%S")

    print(f"–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –æ–±—Ä–∞—â–µ–Ω–∏—è: {todaytime}")

    if os.path.exists(pathdatabase) == True:
        os.remove(pathdatabase)

    # –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—ã
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    con = sqlite3.connect(pathdatabase)
    # –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü
    createtables(con)
    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    con.close()

    # –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    con = sqlite3.connect(pathdatabase)
    # –§—É–Ω–∫—Ü–∏—è –≤—Å—Ç–∞–≤–∫–∏ –ø–µ—Ä–≤–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É
    insertfirstdatesintables(con)

    # –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –≤—Å—Ç–∞–≤–∫—É
    request = 'SELECT FullName.id, FullName.first_name, FullName.last_name, PathFolder.path, ShortNumber.Number, TelegramId.idTelegram FROM FullName, PathFolder, ShortNumber, TelegramId WHERE FullName.id = PathFolder.id_full_name AND FullName.id = ShortNumber.id_full_name AND FullName.id = TelegramId.id_full_name'
    massdates = checkdatesfromdatabase(con, request)
    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    con.close()

    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –æ–Ω–ª–∞–π–Ω
    countonlinemanagers = 0
    # –í—ã–±–∏—Ä–∞–µ–º —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞, –∫–æ—Ç–æ—Ä–æ–º—É —É–ø–∞–¥—ë—Ç –∑–∞—è–≤–∫–∞
    for element in massdates:
        statusget = requests.get(urlapi + str(element[4]) + '/agent', headers=headers).text
        if statusget == '"ONLINE"':
            countonlinemanagers += 1

        print(f"====>{element[1]} {element[2]}\t{statusget}\t{countonlinemanagers}")
    numbermanagerforrequest = random.randint(0, countonlinemanagers)
    print(f"{numbermanagerforrequest}")
    print("–í–∞—à–µ–π –∑–∞—è–≤–∫–æ–π –∑–∞–π–º—ë—Ç—Å—è: ", massdates[numbermanagerforrequest][1])


    #msg = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –æ–±—Ä–∞—â–µ–Ω–∏—è.")
    #markup = telebot.types.InlineKeyboardMarkup()
    #listid = [userid.id_beregovoy, userid.id_konovalov, userid.id_zagravskiy]
    #listnames = [class_namesmanagers.second, class_namesmanagers.third, class_namesmanagers.first]
    #randommanager = random.randint(0, len(listid) - 1)
    #textmessage = todaytime + " [" + message.chat.first_name + " " + message.chat.last_name + "] –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É [üìù–ó–∞–ø–∏—Å–∞—Ç—å—Å—èüìù]  –ø–µ—Ä–µ–≤–æ–∂—É –∑–∞—è–≤–∫—É –Ω–∞ " + listnames[randommanager] + " ( " + str(listid[randommanager]) + " )"
    #print(textmessage)
    #bot.send_message(userid.id_6080, textmessage)

# –§—É–Ω–∫—Ü–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
def savefileinfolder2(message, bot, path):
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–∏–ª–µ
    file_id_info = bot.get_file(message.document.file_id)
    #print(file_id_info)
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–∏–ª
    downloaded_file = bot.download_file(file_id_info.file_path)
    #print(downloaded_file)
    # –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–∏–ª–∞
    file_name = message.document.file_name
    #print(file_name)
    mass = file_name.split(".")
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–∏–ª–∞
    today = datetime.datetime.today().strftime("%d.%m.%Y.") + mass[1]
    #print(today)
    # –ü—É—Ç—å –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–∏–ª
    src = path + today
    #print(src)
    # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–∏–ª
    with open(src, 'wb') as new_file:
        new_file.write(downloaded_file)
        # –°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–æ—á–∫–∏ –∏ "–ø–ª–∏—Ç–∫—É"
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("/start"))
    text = "–§–∞–∏–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ –ø–∞–ø–∫—É:\n!–ø–∞–ø–∫–∞ –¥–ª—è —Ñ–∞–∏–ª–æ–≤ –∏–∑ telegram\n –í —Ç–≤–æ–µ–π –ª–∏—á–Ω–æ–π –ø–∞–ø–∫–µ –Ω–∞ —Å–µ—Ç–µ–≤–æ–º –¥–∏—Å–∫–µ"
    bot.send_message(message.chat.id, text, reply_markup=markup)

# –§—É–Ω–∫—Ü–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏
def subscribetotransportcompany(message, bot):
    print(f"–§—É–Ω–∫—Ü–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –¢–ö")

    # –í—ã—è—Å–Ω–∏–µ–º id —á–µ–ª–æ–≤–µ–∫–∞
    id_sotr = message.chat.id
    print(f"–°–æ—Ç—Ä—É–¥–Ω–∏–∫ —Å id: {id_sotr}")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Ç–µ—Ä–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if os.path.exists(pathdatabase) == True:
        print("–§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        con = sqlite3.connect(pathdatabase)
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        con.close()
    else:
        print("–§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!\t–°–æ–∑–¥–∞—ë–º –±–∞–∑—É –∏ –Ω–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–º–∏")
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        con = sqlite3.connect(pathdatabase)
        # –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü
        createtables(con)
        # –§—É–Ω–∫—Ü–∏—è –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—è –µ—ë –ø–µ—Ä–≤–∏—á–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        insertfirstdatesintables(con)
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        con.close()

    # –î–æ—Å—Ç–∞—ë–º –¥–∞–Ω–Ω—ã–µ –ø–æ –≤—Å–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–º –¢–ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    con = sqlite3.connect(pathdatabase)
    request = ('SELECT TransportCompany.Name, FullName.first_name, FullName.last_name FROM TransportCompany, FullName WHERE TransportCompany.id_responsible=FullName.id UNION SELECT TransportCompany.Name, TransportCompany.id_responsible, TransportCompany.id_responsible FROM TransportCompany WHERE TransportCompany.id_responsible="None"')
    datesfromdatabase = checkdatesfromdatabase(con, request)
    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    con.close()
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ —Å —ç—Ç–∏–º–∏ –¢–ö, —Å–ø—Ä–∞–≤–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å—Ç–∞—Ç—É—Å—ã
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏
    markup = telebot.types.InlineKeyboardMarkup()
    # –†–∞–∑–±–∏—Ä–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    for element in datesfromdatabase:
        # –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –æ—Ç–≤–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ
        name = element[1] + " " + element[2]
        responsiblename = "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π"
        btn1 = telebot.types.InlineKeyboardButton(element[0], callback_data="WrongButton")
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ
        if name == "None None":
            btn2 = telebot.types.InlineKeyboardButton(responsiblename, callback_data=element[0])
        else:
            btn2 = telebot.types.InlineKeyboardButton(name, callback_data=element[0])
        markup.row(btn1, btn2)
    # –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    btn3 = telebot.types.InlineKeyboardButton(text = "–í—ã–π—Ç–∏ –∏–∑ –º–µ–Ω—é", callback_data = "Break")
    markup.add(btn3)

    old_message = bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ –¢–ö", reply_markup=markup)
    print(f"ID old message: {old_message.message_id}")
    @bot.callback_query_handler(func=lambda call: True)
    def callback_inline(call):
        match (call.data):
            case transport_companies.dellin:
                bot.send_message(call.message.chat.id, '–û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ ' + transport_companies.dellin + ".")
                changedatesindatabase(id_sotr, transport_companies.dellin, bot, message)
            case transport_companies.nrg_tk:
                bot.send_message(call.message.chat.id, '–û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ ' + transport_companies.nrg_tk + ".")
                changedatesindatabase(id_sotr, transport_companies.nrg_tk, bot, message)
            case transport_companies.pecom:
                bot.send_message(call.message.chat.id, '–û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ ' + transport_companies.pecom + ".")
                changedatesindatabase(id_sotr, transport_companies.pecom, bot, message)
            case transport_companies.cdek:
                bot.send_message(call.message.chat.id, '–û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ ' + transport_companies.cdek + ".")
                changedatesindatabase(id_sotr, transport_companies.cdek, bot, message)
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—á–∫–∏
            case "Break":
                bot.delete_message(old_message.chat.id, old_message.message_id)
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–≤–µ—Ä–Ω–æ–π –∫–Ω–æ–ø–æ—á–∫–∏
            case _:
                print("–ù–∞ –∫–Ω–æ–ø–æ—á–∫—É —Å–ø—Ä–∞–≤–∞!")
                bot.answer_callback_query(call.id, "–ù–∞ –∫–Ω–æ–ø–æ—á–∫—É —Å–ø—Ä–∞–≤–∞!")

# –§—É–Ω–∫—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
def changedatesindatabase(id_responsible, tk_name, bot, message):
    try:
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        con = sqlite3.connect(pathdatabase)
        # –í—ã—è—Å–Ω—è–µ–º id —á–µ–ª–æ–≤–µ–∫–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        request = 'SELECT id FROM TelegramId WHERE idTelegram = ' + str(id_responsible)
        id_responsible_in_database = checkdatesfromdatabase(con, request)[0][0]
        #print(f"{id_responsible}\t\t{tk_name}\n{request}\n{id_responsible_in_database}")

        # –í—ã—è—Å–Ω—è–µ–º id —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏
        request = 'SELECT id FROM TransportCompany WHERE Name = "' + str(tk_name) + '"'
        id_tk_in_database = checkdatesfromdatabase(con, request)[0][0]
        #print(f"{id_responsible}\t\t{tk_name}\n{request}\n{id_tk_in_database}")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ —ç—Ç—É –¢–ö
        request = 'SELECT id_responsible FROM TransportCompany WHERE Name = "' + str(tk_name) + '"'
        id_oldresponsible_in_database = checkdatesfromdatabase(con, request)[0][0]
        #print(f"{id_responsible}\t\t{tk_name}\n{request}\n{id_responsible_in_database}\t{id_tk_in_database}\t{id_oldresponsible_in_database}")
        if id_oldresponsible_in_database == id_responsible_in_database:
            bot.send_message(message.chat.id, "–¢—ã —É–∂–µ –∏ —Ç–∞–∫ –æ—Ç–≤–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–æ —ç—Ç–æ–π –¢–ö")
            #print(f"\t\t{id_responsible_in_database} —Ä–∞–≤–µ–Ω {id_oldresponsible_in_database}. –ó–∞—á–µ–º –±—É–¥–µ–º –æ–±–Ω–æ–≤–ª—è—Ç—å?")
        else:
            # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏
            request = 'UPDATE TransportCompany SET id_responsible = ' + str(id_responsible_in_database) + ' WHERE id = ' + str(id_tk_in_database)
            checkdatesfromdatabase(con, request)
            bot.send_message(message.chat.id, "–í—Ä–æ–¥–µ –≤—Å—ë –ø–æ–ª—É—á–∏–ª–æ—Å—å")

        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        con.close()
    except Exception as e:
        bot.send_message(message.chat.id, f"–ß–æ—Ç —Å–ª–æ–º–∞–ª–æ—Å—å(\n–ü–µ—Ä–µ—à–ª–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.\n{e}")