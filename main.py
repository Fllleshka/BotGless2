from projectfiles.functionsforallusers import *
from projectfiles.functionsforadmin import *
from projectfiles.transportscompanys import *
from projectfiles.menu import *
from projectfiles.avitodrom import *

# –¢–æ–∫–µ–Ω –¥–ª—è —Å–≤—è–∑–∏ —Å –±–æ—Ç–æ–º
bot = telebot.TeleBot(class_bot.botkey)

# –ö–æ–º–∞–Ω–¥a start
@bot.message_handler(commands = ['start', '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ'])
def start(message):

    # –õ–µ–≤–æ–µ –º–µ–Ω—é
    menu = LeftMenu(bot)
    menu.initmenu()

    # –ö–Ω–æ–ø–∫–∏
    class buttons:
        btn1 = types.KeyboardButton("‚è∞–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã‚è∞")
        btn2 = types.KeyboardButton("üñ•–ù–∞—à–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏üñ•")
        btn3 = types.KeyboardButton("üìù–ó–∞–ø–∏—Å–∞—Ç—å—Å—èüìù")
        btn5 = types.KeyboardButton("üì≤–°—Å—ã–ª–∫–∏ —Å –æ—Ç–∑—ã–≤–∞–º–∏üì≤")
        btn4 = types.KeyboardButton("‚òé–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å call-—Ü–µ–Ω—Ç—Ä‚òé")
        btn6 = types.KeyboardButton("–í—ã—è—Å–Ω–∏—Ç—å id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        btn7 = types.KeyboardButton("–í—ã–∫–ª—é—á–∏—Ç—å Call-—Ü–µ–Ω—Ç—Ä")
        btn8 = types.KeyboardButton("–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞")
        btn9 = types.KeyboardButton("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª –≤ –ø–∞–ø–∫—É")
        btn10 = types.KeyboardButton("–ü–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –¢–ö")

    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∏—Ç–∫–∏
    class createmarkup:

        # –û–±—å—è–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        def __init__(self, message):
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∞–∫–∫–∞—É–Ω—Ç–∞
            self.id = message.chat.id
            # –°–æ–∑–¥–∞—ë–º "–ø–ª–∏—Ç–∫—É"
            self.markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

        # –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∏—Ç–∫–∏
        def create(self):
            match self.id:
                # –ê–∫–∫–∞—É–Ω—Ç—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
                case newusers.administrator.id | newusers.pushkar.id | newusers.sekachev.id:
                    self.markup.add(buttons.btn1, buttons.btn2, buttons.btn5, buttons.btn4, buttons.btn3)
                    self.markup.add(buttons.btn7, buttons.btn8, buttons.btn10, buttons.btn9)
                # –ê–∫–∫–∞—É–Ω—Ç—ã –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
                case newusers.peshkov.id | newusers.zagravskiy.id | newusers.konovalov.id | newusers.beregovoy.id:
                    self.markup.add(buttons.btn1, buttons.btn2, buttons.btn5)
                    self.markup.add(buttons.btn4, buttons.btn7)
                    self.markup.add(buttons.btn9)
                # –ê–∫–∫–∞—É–Ω—Ç—ã –∫–ª–∞–¥–æ–≤—â–∏–∫–æ–≤
                case newusers.ivanov.id | newusers.kireev.id:
                    self.markup.add(buttons.btn8, buttons.btn10)
                    self.markup.add(buttons.btn9)
                # –ê–∫–∫–∞—É–Ω—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞
                case newusers.fleysner.id:
                    self.markup.add(buttons.btn1, buttons.btn2, buttons.btn3)
                    self.markup.add(buttons.btn4, buttons.btn5, buttons.btn6)
                    self.markup.add(buttons.btn7, buttons.btn8, buttons.btn9)
                    self.markup.add(buttons.btn10)
                # –ê–∫–∫–∞—É–Ω—Ç –∫–ª–∏–µ–Ω—Ç–∞
                case _:
                    self.markup.add(buttons.btn1, buttons.btn2, buttons.btn5)
                    self.markup.add(buttons.btn3)
            return self.markup

    markupclass = createmarkup(message)
    markup = markupclass.create()

    # –û—Ç—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    textmessage = "–ü—Ä–∏–≤–µ—Ç, {0.first_name}!\n–Ø –±–æ—Ç –∞–≤—Ç–æ—Ç–µ—Ö—Ü–µ–Ω—Ç–∞ ‚öôGlessGroup‚öô\n–ß–µ–º —è –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å?"
    bot.send_message(message.chat.id,
                     text = textmessage.format(message.from_user),
                     reply_markup=markup)

# –ö–æ–º–∞–Ω–¥—ã –ø–æ –∫–Ω–æ–ø–∫–∞–º –≤ —á–∞—Ç–µ
@bot.message_handler(content_types= ['text'])
def textmessage(message):
    match(message.text):
        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤
        case "‚è∞–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã‚è∞":
            timeworking(message, bot)
        case "üñ•–ù–∞—à–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏üñ•":
            socialntworks(message, bot)
        case "üìù–ó–∞–ø–∏—Å–∞—Ç—å—Å—èüìù":
            print(f"{newusers.administrator.id}\t{type(newusers.administrator.id)}")
            func_not_ready(message, bot)
        case "üì±–°—Å—ã–ª–∫–∞ —Å TG –∏ –æ—Ç–∑—ã–≤–∞–º–∏üì±":
            channellinkandreviews(message, bot)
        case "üì≤–°—Å—ã–ª–∫–∏ —Å –æ—Ç–∑—ã–≤–∞–º–∏üì≤":
            reviews(message, bot)
        case "–í—ã—è—Å–Ω–∏—Ç—å id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è":
            youid(message, bot)
        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        case "‚òé–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å call-—Ü–µ–Ω—Ç—Ä‚òé":
            changecallcener(message, bot)
        case "–í—ã–∫–ª—é—á–∏—Ç—å Call-—Ü–µ–Ω—Ç—Ä":
            offcallcenter(message, bot)
        case "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞":
            reloadscriptuploadfilesonserverglessgroup(message, bot)
        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∫–ª–∞–¥–æ–≤—â–∏–∫–æ–≤
        case "–ü–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –¢–ö":
            subscribetotransportcompany(message, bot)
        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
        case "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª –≤ –ø–∞–ø–∫—É":
            savefileinfolder2(message, bot)
        case _:
            senderrormessage(message, bot)

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞
def func_not_ready(message, bot):
    textmessage = "–£–≤–∞–∂–∞–µ–º—ã–π, {0.first_name}!\n–Ø –±–æ—Ç –∞–≤—Ç–æ—Ç–µ—Ö—Ü–µ–Ω—Ç–∞ ‚öôGlessGroup‚öô\n–ü–æ–∫–∞ —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –µ—â—ë –Ω–µ —Ä–∞–ª–∏–∑–æ–≤–∞–Ω–∞.\n–ö–∞–∫ —Ç–æ–ª—å–∫–æ –ø–æ—è–≤–∏—Ç—Å—è —Ç–∞–∫–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å, –º—ã –≤—Å—ë –ø–æ–ø—Ä–∞–≤–∏–º."
    bot.send_message(message.chat.id, text=textmessage.format(message.from_user))
    start(message)

# –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –¢–ö
x = class_tk(bot)
t0 = Thread(target = x.startprocessing)
t0.start()
# –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–ø—Ä–æ—Å–∞ –î—Ä–æ–º–∞ –ø–æ –±–∞–ª–∞–Ω—Å—É
drrom = drom()
t1 = Thread(target = drrom.startprocessing)
t1.start()
# –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–ø—Ä–æ—Å–∞ –ê–≤–∏—Ç–æ –ø–æ –±–∞–ª–∞–Ω—Å—É
avvito = avito()
t2 = Thread(target = avvito.startprocessing)
t2.start()

while True:
    try:
        # –ó–∞–ø—É—Å—Ç–∏–ª–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –æ–ø—Ä–æ—Å –±–æ—Ç–∞ Telegram
        bot.polling(none_stop=True, interval=0)

    except Exception as e:
        print(e)
        time.sleep(15)